{"version":3,"sources":["Components/NavigationMenu.js","Components/Navigation.js","Components/Header.js","Components/Footer.js","Components/ProductCard.js","Hooks/HttpRequest.js","Views/Home.js","Views/About.js","Views/Product.js","App.js","serviceWorker.js","index.js"],"names":["NavigationMenu","props","className","to","onClick","closeMenu","Navigation","useState","showMenu","setShowMenu","menuTransitions","useTransition","from","opacity","transform","enter","leave","maskTransitions","position","icon","faBars","map","item","key","div","style","Header","Footer","ProductCard","product","id","images","name","price","description","useAxiosGet","url","request","setRequest","useEffect","axios","get","then","response","data","Home","products","content","About","Product","useParams","src","alt","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.245d1c5e.chunk.js","sourcesContent":["import React from \"react\"\nimport {Link} from \"react-router-dom\"\n\n\nfunction NavigationMenu(props) {\n  return (\n    <div>\n      <span className='font-bold p-3 block text-2xl'>\n              The menu\n      </span>\n      <ul className='pl-3'>\n        <li>\n          <Link to='/' className='text-blue-500 py-3 border-t border-b block'\n                onClick={props.closeMenu}\n          >Home</Link>\n        </li>\n        <li>\n          <Link to='/about' className='text-blue-500 py-3 border-t border-b block'\n                onClick={props.closeMenu}\n          >About</Link>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default NavigationMenu","import React, {useState} from \"react\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faBars} from \"@fortawesome/free-solid-svg-icons\"\nimport {useTransition, animated} from \"react-spring/web\"\nimport NavigationMenu from \"./NavigationMenu\"\n\nfunction Navigation() {\n  //className='fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow'\n  //className='fixed bg-black-t-50 top-0 left-0 w-full h-full z-50\n  const [showMenu, setShowMenu] = useState(false)\n  const menuTransitions = useTransition(showMenu, null, {\n    from: {opacity: 0, transform: 'translateX(-100%)'},\n    enter: {opacity: 1, transform: 'translateX(0)'},\n    leave: {opacity: 0, transform: 'translateX(-100%)'},\n  })\n  const maskTransitions = useTransition(showMenu, null, {\n    from: {position: 'absolute', opacity: 0},\n    enter: {opacity: 1},\n    leave: {opacity: 0},\n  })\n  return (\n    <nav>\n      <span className='text-xl'>\n        <FontAwesomeIcon\n          icon={faBars}\n          onClick={() => setShowMenu(!showMenu)}\n        />\n      </span>\n      {\n        maskTransitions.map(({item, key, props}) =>\n          item &&\n          <animated.div\n            key={key}\n            style={props}\n            className='fixed bg-black-t-50 top-0 left-0 w-full h-full z-50'\n            onClick={() => setShowMenu(false)}\n          >\n          </animated.div>\n        )\n      }\n      {\n        menuTransitions.map(({item, key, props}) =>\n          item &&\n          <animated.div\n            key={key}\n            style={props}\n            className='fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow'\n          >\n           <NavigationMenu\n           closeMenu={() => setShowMenu(false)}\n           />\n          </animated.div>\n        )\n      }\n    </nav>\n  )\n}\n\nexport default Navigation","import React from \"react\"\nimport Navigation from \"./Navigation\"\n\nfunction Header() {\n  return (\n    <header className='border-b p-3 flex justify-between items-center'>\n      <span className='font-bold'>\n      AppName\n      </span>\n      <Navigation/>\n    </header>\n  )\n}\n\nexport default Header","import React from \"react\"\n\nfunction Footer(){\n  return(\n    <footer className='bg-gray-200 text-center p-3 absolute bottom-0 w-full left-0'>\n      &copy; Copyright 2020\n    </footer>\n  )\n}\nexport default Footer","import React from 'react'\nimport {Link} from \"react-router-dom\"\n\nfunction ProductCard(props) {\n  return (\n    <div className='border mb-6 rounded overflow-hidden'>\n      <Link to={`/products/${props.product.id}`}>\n        <div\n          style={{\n            'backgroundImage': `url('${props.product.images}')`\n          }}\n          className='w-full h-64 bg-blue bg-cover'\n        >\n        </div>\n      </Link>\n      <div className='p-3'>\n        <h3 className='font-bold text-xl mb-3'>\n          <Link to={`/products/${props.product.id}`}>\n            {props.product.name}\n          </Link>\n        </h3>\n        <div className='font-bold mb-3'>\n          ${props.product.price}\n        </div>\n        <div className='mb-3'>\n          {props.product.description}\n        </div>\n        <Link to={`products/${props.product.id}`}\n        className='bg-blue-500 text-white p-2 flex justify-center align-center'\n        >View</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductCard","import React, {useEffect, useState} from \"react\"\nimport axios from \"axios\"\n\nexport function useAxiosGet(url){\n  const [request, setRequest] = useState(null)\n  useEffect(() => {\n    axios.get(url)\n      .then(response => {\n        setRequest(response.data)\n      })\n  }, [url])\n  return request\n\n}\n","import React from \"react\"\n\nimport ProductCard from '../Components/ProductCard'\nimport {useAxiosGet} from \"../Hooks/HttpRequest\"\n\nfunction Home() {\n  const url = 'https://5f7151c564a3720016e60491.mockapi.io/products'\n\n  let products=useAxiosGet(url)\n\nlet content=null\n  if (products) {\n    content =\n      products.map(product=>\n      <div key={product.id}>\n      <ProductCard\n         product={product}     />\n        </div>\n      )\n  }\n  return (\n    <div>\n      <h1 className='font-bold text-2xl p-2 '\n      > This is home page</h1>\n      {content}\n    </div>\n  )\n}\n\nexport default Home","import React from \"react\"\n\nfunction  About (){\n  return(\n    <div>\n      <h1 className='font-bold text-2xl'> About us</h1>\n    </div>\n  )\n}\nexport default About","import React from \"react\"\nimport {Link, useParams} from 'react-router-dom'\nimport {useAxiosGet} from \"../Hooks/HttpRequest\"\nfunction Product() {\n  const{id}=useParams()\n\n  const url = `https://5f7151c564a3720016e60491.mockapi.io/products/${id}`\n  let product=useAxiosGet(url)\nlet content=null\n  if (product) {\n   content =\n      <div>\n        <h1 className='text-2xl font-bold mb-3'>\n          {product.name}\n      </h1>\n        <div>\n          <img src={product.images} alt={product.name}/>\n        </div>\n        <div className='font-bold text-xl mb-3'>\n          ${product.price}\n        </div>\n        <div>\n          {product.description}\n        </div>\n        <div className='bg-gray-500 text-white m-3 p-2 flex justify-center align-center'\n           >\n       <Link to={'/'}>GO Back</Link>\n        </div>\n      </div>\n\n\n  }\n  return (\n    <div>{content}</div>\n  )\n\n}\n\nexport default Product","import React from 'react'\nimport Header from \"./Components/Header\"\nimport Footer from \"./Components/Footer\"\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Home from \"./Views/Home\"\nimport About from \"./Views/About\"\nimport Product from \"./Views/Product\"\n\n\nfunction App() {\n  return (\n    <div className='relative pb-10 min-h-screen'>\n      <Router>\n        <div className='p-3'>\n          <Header/>\n          <div >\n            <Switch>\n              <Route exact path=\"/\">\n                <Home/>\n              </Route>\n              <Route path=\"/about\">\n                <About/>\n              </Route>\n              <Route path=\"/products/:id\">\n                <Product />\n              </Route>\n            </Switch>\n          </div>\n          <Footer/>\n        </div>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}